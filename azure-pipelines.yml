trigger:
  branches:
    include:
      - main

variables:
  buildConfiguration: "Release"
  frontendAppName: "realityFightsReactApp"
  backendAppName: "realityFightsDotnetApp"

stages:
  # ----------------- BUILD STAGE -----------------
  - stage: Build
    displayName: "Build Frontend and Backend"
    jobs:
      - job: BuildFrontend
        displayName: "Build React Frontend"
        pool:
          vmImage: "ubuntu-latest"
        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: "18.x"
            displayName: "Install Node.js"

          - script: |
              cd client
              npm install
              npm run build
            displayName: "Build React App"

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(System.DefaultWorkingDirectory)/client/dist"
              artifactName: "frontend"
              publishLocation: "Container"

      - job: BuildBackend
        displayName: "Build .NET Backend"
        pool:
          vmImage: "windows-latest"
        steps:
          - task: UseDotNet@2
            inputs:
              version: "8.0.x"

          - task: DotNetCoreCLI@2
            inputs:
              command: "restore"
              projects: "**/*.csproj"

          - task: DotNetCoreCLI@2
            inputs:
              command: "build"
              projects: "**/*.csproj"
              arguments: "--configuration Release"

          - task: DotNetCoreCLI@2
            inputs:
              command: "publish"
              projects: "**/DotNet.csproj"
              publishWebProjects: true
              arguments: "--configuration Release --output $(Build.ArtifactStagingDirectory)"
              zipAfterPublish: true

          - task: PowerShell@2
            displayName: "Rename published zip to backend.zip"
            inputs:
              targetType: "inline"
              script: |
                $zip = Get-ChildItem -Path "$(Build.ArtifactStagingDirectory)" -Filter *.zip | Select-Object -First 1
                if ($zip) {
                  Write-Host "Found zip: $($zip.FullName)"
                  Rename-Item -Path $zip.FullName -NewName "$($zip.DirectoryName)\backend.zip"
                  Write-Host "Renamed zip to $zip.DirectoryName with child backend.zip"
                } else {
                  Write-Error "No zip file found to rename."
                }

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: "$(Build.ArtifactStagingDirectory)"
              artifactName: "backend"
              publishLocation: "Container"

    # ----------------- DEPLOY BACKEND -----------------
  - stage: DeployBackend
    displayName: "Deploy .NET Backend"
    dependsOn: Build

    pool:
      vmImage: "windows-latest"
    jobs:
      - deployment: DeployBackend
        environment: "backend-env"
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DownloadPipelineArtifact@2
                  displayName: "Download backend artifact"
                  inputs:
                    artifact: backend
                    path: "$(Pipeline.Workspace)/backend"

                - task: PowerShell@2
                  displayName: "Verify backend.zip exists"
                  inputs:
                    targetType: "inline"
                    script: |
                      $path = "$(Pipeline.Workspace)\backend\backend.zip"
                      if (Test-Path $path) {
                        Write-Host "Found: $path"
                      } else {
                        Write-Error "Missing: $path"
                      }

                - task: PowerShell@2
                  displayName: "List backend folder contents"
                  inputs:
                    targetType: "inline"
                    script: |
                      Get-ChildItem -Path "$(Pipeline.Workspace)/backend" -Recurse

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: "AzureRM"
                    azureSubscription: "AzureRMConnection"
                    appType: "webApp"
                    WebAppName: "$(backendAppName)"
                    packageForWindows: "$(Pipeline.Workspace)\backend\backend.zip"

  # ----------------- DEPLOY FRONTEND -----------------
  - stage: DeployFrontend
    displayName: "Deploy React Frontend"
    dependsOn: Build
    jobs:
      - deployment: DeployFrontend
        environment: "frontend-env"
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: frontend

                - task: AzureWebApp@1
                  inputs:
                    azureSubscription: "AzureRMReactConnection"
                    appType: "webApp"
                    appName: $(frontendAppName)
                    package: "$(Pipeline.Workspace)/frontend"
